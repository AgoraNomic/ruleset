Rule 2162/16 (Power=3)
Switches

      A type of switch is a property that a rule or a contract defines
      as a switch (with such rule or contract being its backing
      document) and specifies the following:
      
      1. The type(s) of entity possessing an instance of that switch. No
         other entity possesses an instance of that switch.
      
      2. One or more possible values for instances of that switch,
         exactly one of which should be designated as the default. No
         values other than those listed are possible for instances of
         that switch, except that, if no default is otherwise
         specified, then rules to the contrary notwithstanding, the
         "null" value is a possible value for that switch, and is the
         default.
      
      At any given time, each instance of a switch has exactly one
      possible value for that type of switch. If an instance of a switch
      comes to have a value, it ceases to have any other value. If an
      instance of a switch would otherwise fail to have a possible
      value, it comes to have its default value. A Rule that designates
      a switch as "secured" (at a given power level) designates changes
      to the properties of that type of switch as secured (at that power
      level) and designates changes to the value of each instance of the
      switch as secured (at that power level).
      
      "To flip an instance of a switch" is to make it come to have a
      given value. "To become X" (where X is a possible value of
      exactly one of the subject's switches) is to flip that switch to
      X.
      
      If a type of switch is not explicitly designated as
      possibly-indeterminate by its backing document, and if an action
      or set of actions would cause the value of an instance of that
      type of switch to become indeterminate, that instance instead
      takes on its last determinate and possible value, if any,
      otherwise it takes on its default value.
      
      A singleton switch is a switch for which Agora Nomic is the only
      entity possessing an instance of that switch.
      
      A boolean switch is a switch with values True and False. A
      positive boolean switch has a default of True; a negative boolean
      switch has a default of False.
      
      Attempting to flip an instance of a switch to a value it already
      has does not flip the switch. However, if a person is REQUIRED to
      flip a switch instance to a value it already has, then either
      attempting to do so using the required mechanism, or announcing
      that the switch already has the required value, fulfills the
      requirement without flipping the switch.

History:

Enacted by P5111 'Return of switches' (Murphy), 02 Aug 2007
Amended(1) by P5271 'Implicit Switches v1.1' (Murphy), 07 Nov 2007
Amended(2) by P7247 'no more almost-switches' (omd), 10 Jun 2012
Amended(3) by P7289 (G.), 09 Sep 2012
Amended(4) by P7425 'Yaks' (Walker, G., Murphy, omd), 27 May 2013
Amended(5) by P7649 'I always thought these already ratified' (omd), 03
   Jun 2014
Amended(6) by P7735 'Noise reduction' (aranea), 02 May 2015
Amended(7) by P7828 'Boolean Switches V2' (G.), 07 Nov 2016
Amended(8) by R2430, 24 May 2017
Amended(9) by P7902 'Switch no-ops' (G.), 03 Oct 2017
Amended(10) by P7903 'Numerical Switches v2' (G.), 03 Oct 2017
Amended(11) by P8075 'Less Critical Patching' (Aris, G.), 26 Jul 2018
Power changed from 2 to 3 by P8075 'Less Critical Patching' (Aris, G.),
   26 Jul 2018
Amended(12) by P8241 'Secured switches (v2.0)' (Janet, Falsifian), 18
   Sep 2019
Amended(13) by P8255 'Possibly-Inderterminate Switches' (Janet), 03 Nov
   2019
Amended(14) by P8583 'Clarify switches' (Murphy), 23 Jun 2021
Amended(15) by P9171 'Rationalizing Recordkeepors v1.2' (Kate, Murphy,
   Janet, 4st), 15 Sep 2024
Amended(16) by P9205 'Switch It Up' (Mischief, Janet), 26 Jan 2025

Annotations:
